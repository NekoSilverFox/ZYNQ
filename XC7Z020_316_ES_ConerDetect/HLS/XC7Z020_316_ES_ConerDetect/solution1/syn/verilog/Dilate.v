// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Dilate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i_i_i_reg_860;
reg   [0:0] icmp_reg_822;
reg   [0:0] tmp_s_reg_813;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] or_cond_i_i_reg_894;
reg   [0:0] or_cond_i_i_reg_894_pp0_iter2_reg;
reg   [10:0] t_V_4_reg_245;
wire   [0:0] exitcond461_i_i_fu_256_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_262_p2;
reg   [9:0] i_V_reg_808;
wire   [0:0] tmp_s_fu_268_p2;
wire   [0:0] tmp_146_not_fu_274_p2;
reg   [0:0] tmp_146_not_reg_817;
wire   [0:0] icmp_fu_290_p2;
wire   [0:0] tmp_39_fu_296_p2;
reg   [0:0] tmp_39_reg_827;
wire   [0:0] tmp_176_2_fu_302_p2;
reg   [0:0] tmp_176_2_reg_831;
wire   [0:0] tmp_40_fu_308_p2;
reg   [0:0] tmp_40_reg_835;
wire   [1:0] row_assign_7_1_t_fu_318_p2;
reg   [1:0] row_assign_7_1_t_reg_841;
wire   [1:0] row_assign_7_2_t_fu_324_p2;
reg   [1:0] row_assign_7_2_t_reg_846;
wire   [0:0] exitcond460_i_i_fu_334_p2;
reg   [0:0] exitcond460_i_i_reg_851;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op94_read_state4;
reg    ap_predicate_op102_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_i_reg_851_pp0_iter1_reg;
reg   [0:0] exitcond460_i_i_reg_851_pp0_iter2_reg;
wire   [10:0] j_V_fu_340_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_fu_408_p2;
wire   [1:0] tmp_64_fu_444_p1;
reg   [1:0] tmp_64_reg_864;
wire   [0:0] brmerge_fu_448_p2;
reg   [0:0] brmerge_reg_869;
reg   [9:0] k_buf_0_val_3_addr_reg_876;
reg   [9:0] k_buf_0_val_4_addr_reg_882;
reg   [9:0] k_buf_0_val_5_addr_reg_888;
wire   [0:0] or_cond_i_i_fu_460_p2;
reg   [0:0] or_cond_i_i_reg_894_pp0_iter1_reg;
wire   [7:0] col_buf_0_val_0_0_fu_491_p3;
reg   [7:0] col_buf_0_val_0_0_reg_898;
reg   [7:0] col_buf_0_val_0_0_reg_898_pp0_iter2_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_562_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_905;
wire   [7:0] temp_0_i_i_i_0210_i_1_fu_613_p3;
reg   [7:0] temp_0_i_i_i_0210_i_1_reg_912;
wire   [7:0] temp_0_i_i_i_0210_i_4_fu_671_p3;
reg   [7:0] temp_0_i_i_i_0210_i_4_reg_918;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [9:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [9:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [9:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_234;
reg    ap_block_state1;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_41_fu_453_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_120;
reg   [7:0] src_kernel_win_0_va_1_fu_124;
reg   [7:0] src_kernel_win_0_va_2_fu_128;
reg   [7:0] src_kernel_win_0_va_3_fu_132;
reg   [7:0] src_kernel_win_0_va_4_fu_136;
wire   [7:0] src_kernel_win_0_va_9_fu_580_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_140;
reg   [7:0] src_kernel_win_0_va_6_fu_144;
reg   [7:0] right_border_buf_0_s_fu_148;
wire   [7:0] col_buf_0_val_2_0_fu_529_p3;
reg   [7:0] right_border_buf_0_1_fu_152;
wire   [7:0] col_buf_0_val_1_0_fu_510_p3;
wire   [8:0] tmp_fu_280_p4;
wire   [1:0] tmp_53_fu_314_p1;
wire   [9:0] tmp_54_fu_346_p4;
wire   [11:0] t_V_4_cast_fu_330_p1;
wire   [9:0] tmp_55_fu_362_p1;
wire   [11:0] ImagLoc_x_fu_366_p2;
wire   [0:0] tmp_56_fu_378_p3;
wire   [1:0] tmp_62_fu_392_p4;
wire   [0:0] icmp3_fu_402_p2;
wire   [0:0] rev_fu_386_p2;
wire   [0:0] tmp_63_fu_414_p3;
wire   [0:0] not_s_fu_422_p2;
wire   [9:0] ImagLoc_x_cast_fu_372_p2;
wire   [9:0] p_assign_1_cast_cast_fu_428_p3;
wire   [9:0] x_fu_436_p3;
wire   [0:0] icmp2_fu_356_p2;
wire   [1:0] col_assign_1_t_fu_474_p2;
wire   [7:0] tmp_49_fu_479_p5;
wire   [7:0] tmp_50_fu_498_p5;
wire   [7:0] tmp_51_fu_517_p5;
wire   [7:0] tmp_52_fu_551_p5;
wire   [7:0] tmp_57_fu_569_p5;
wire   [0:0] tmp_222_0_1_fu_593_p2;
wire   [7:0] temp_0_i_i_i_0210_i_fu_599_p3;
wire   [0:0] tmp_222_0_2_fu_607_p2;
wire   [0:0] tmp_222_1_fu_640_p2;
wire   [7:0] temp_0_i_i_i_0210_i_2_fu_645_p3;
wire   [0:0] tmp_222_1_1_fu_652_p2;
wire   [7:0] temp_0_i_i_i_0210_i_3_fu_658_p3;
wire   [0:0] tmp_222_1_2_fu_666_p2;
wire   [0:0] tmp_222_2_fu_696_p2;
wire   [7:0] temp_0_i_i_i_0210_i_5_fu_701_p3;
wire   [0:0] tmp_222_2_1_fu_708_p2;
wire   [7:0] temp_0_i_i_i_0210_i_6_fu_714_p3;
wire   [0:0] tmp_222_2_2_fu_722_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_68;
reg    ap_enable_state3_pp0_iter0_stage0;
wire    ap_enable_operation_84;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op98_store_state4;
reg    ap_enable_operation_98;
reg    ap_predicate_op103_store_state4;
reg    ap_enable_operation_103;
reg    ap_enable_operation_70;
wire    ap_enable_operation_88;
reg    ap_predicate_op96_store_state4;
reg    ap_enable_operation_96;
reg    ap_predicate_op101_store_state4;
reg    ap_enable_operation_101;
reg    ap_enable_operation_72;
wire    ap_enable_operation_91;
reg    ap_predicate_op95_store_state4;
reg    ap_enable_operation_95;
reg    ap_predicate_op100_store_state4;
reg    ap_enable_operation_100;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_635;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

FAST_t_opr_k_buf_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

FAST_t_opr_k_buf_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

FAST_t_opr_k_buf_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

doCorner_mux_32_8ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
doCorner_mux_32_8ocq_U31(
    .din0(src_kernel_win_0_va_6_fu_144),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_474_p2),
    .dout(tmp_49_fu_479_p5)
);

doCorner_mux_32_8ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
doCorner_mux_32_8ocq_U32(
    .din0(right_border_buf_0_1_fu_152),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_474_p2),
    .dout(tmp_50_fu_498_p5)
);

doCorner_mux_32_8ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
doCorner_mux_32_8ocq_U33(
    .din0(right_border_buf_0_s_fu_148),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_474_p2),
    .dout(tmp_51_fu_517_p5)
);

doCorner_mux_32_8ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
doCorner_mux_32_8ocq_U34(
    .din0(col_buf_0_val_0_0_fu_491_p3),
    .din1(col_buf_0_val_1_0_fu_510_p3),
    .din2(col_buf_0_val_2_0_fu_529_p3),
    .din3(row_assign_7_1_t_reg_841),
    .dout(tmp_52_fu_551_p5)
);

doCorner_mux_32_8ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
doCorner_mux_32_8ocq_U35(
    .din0(col_buf_0_val_0_0_fu_491_p3),
    .din1(col_buf_0_val_1_0_fu_510_p3),
    .din2(col_buf_0_val_2_0_fu_529_p3),
    .din3(row_assign_7_2_t_reg_846),
    .dout(tmp_57_fu_569_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond461_i_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((exitcond461_i_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_fu_334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_245 <= j_V_fu_340_p2;
    end else if (((exitcond461_i_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_4_reg_245 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_reg_234 <= i_V_reg_808;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_234 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_fu_334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_869 <= brmerge_fu_448_p2;
        k_buf_0_val_3_addr_reg_876 <= tmp_41_fu_453_p1;
        k_buf_0_val_4_addr_reg_882 <= tmp_41_fu_453_p1;
        k_buf_0_val_5_addr_reg_888 <= tmp_41_fu_453_p1;
        or_cond_i_i_i_reg_860 <= or_cond_i_i_i_fu_408_p2;
        or_cond_i_i_reg_894 <= or_cond_i_i_fu_460_p2;
        tmp_64_reg_864 <= tmp_64_fu_444_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_898 <= col_buf_0_val_0_0_fu_491_p3;
        exitcond460_i_i_reg_851 <= exitcond460_i_i_fu_334_p2;
        exitcond460_i_i_reg_851_pp0_iter1_reg <= exitcond460_i_i_reg_851;
        or_cond_i_i_reg_894_pp0_iter1_reg <= or_cond_i_i_reg_894;
        src_kernel_win_0_va_8_reg_905 <= src_kernel_win_0_va_8_fu_562_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        col_buf_0_val_0_0_reg_898_pp0_iter2_reg <= col_buf_0_val_0_0_reg_898;
        exitcond460_i_i_reg_851_pp0_iter2_reg <= exitcond460_i_i_reg_851_pp0_iter1_reg;
        or_cond_i_i_reg_894_pp0_iter2_reg <= or_cond_i_i_reg_894_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_808 <= i_V_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_822 <= icmp_fu_290_p2;
        row_assign_7_1_t_reg_841 <= row_assign_7_1_t_fu_318_p2;
        row_assign_7_2_t_reg_846 <= row_assign_7_2_t_fu_324_p2;
        tmp_146_not_reg_817 <= tmp_146_not_fu_274_p2;
        tmp_176_2_reg_831 <= tmp_176_2_fu_302_p2;
        tmp_39_reg_827 <= tmp_39_fu_296_p2;
        tmp_40_reg_835 <= tmp_40_fu_308_p2;
        tmp_s_reg_813 <= tmp_s_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_152 <= col_buf_0_val_1_0_fu_510_p3;
        right_border_buf_0_s_fu_148 <= col_buf_0_val_2_0_fu_529_p3;
        src_kernel_win_0_va_6_fu_144 <= col_buf_0_val_0_0_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_851_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_124 <= src_kernel_win_0_va_fu_120;
        src_kernel_win_0_va_fu_120 <= col_buf_0_val_0_0_reg_898_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_851_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_128 <= src_kernel_win_0_va_8_reg_905;
        src_kernel_win_0_va_3_fu_132 <= src_kernel_win_0_va_2_fu_128;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_i_reg_851 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_136 <= src_kernel_win_0_va_9_fu_580_p3;
        src_kernel_win_0_va_5_fu_140 <= src_kernel_win_0_va_4_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_894 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_0210_i_1_reg_912 <= temp_0_i_i_i_0210_i_1_fu_613_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_894_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_0210_i_4_reg_918 <= temp_0_i_i_i_0210_i_4_fu_671_p3;
    end
end

always @ (*) begin
    if ((exitcond460_i_i_fu_334_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_176_2_reg_831 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_176_2_reg_831 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_635)) begin
        if (((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_635)) begin
        if (((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_reg_822 == 1'd0) & (or_cond_i_i_i_reg_860 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op102_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op94_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond460_i_i_fu_334_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond460_i_i_fu_334_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_372_p2 = ($signed(10'd1023) + $signed(tmp_55_fu_362_p1));

assign ImagLoc_x_fu_366_p2 = ($signed(12'd4095) + $signed(t_V_4_cast_fu_330_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = ((or_cond_i_i_reg_894_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_635 = ((or_cond_i_i_i_reg_860 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_100 = (ap_predicate_op100_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_101 = (ap_predicate_op101_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_103 = (ap_predicate_op103_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_68 = (exitcond460_i_i_fu_334_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_70 = (exitcond460_i_i_fu_334_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_72 = (exitcond460_i_i_fu_334_p2 == 1'd0);
end

assign ap_enable_operation_84 = (1'b1 == 1'b1);

assign ap_enable_operation_88 = (1'b1 == 1'b1);

assign ap_enable_operation_91 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_95 = (ap_predicate_op95_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_96 = (ap_predicate_op96_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_98 = (ap_predicate_op98_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op100_store_state4 = ((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op101_store_state4 = ((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op102_read_state4 = ((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op103_store_state4 = ((tmp_s_reg_813 == 1'd1) & (icmp_reg_822 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op94_read_state4 = ((icmp_reg_822 == 1'd0) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op95_store_state4 = ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op96_store_state4 = ((icmp_reg_822 == 1'd0) & (tmp_39_reg_827 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op98_store_state4 = ((icmp_reg_822 == 1'd0) & (tmp_176_2_reg_831 == 1'd1) & (or_cond_i_i_i_reg_860 == 1'd1));
end

assign brmerge_fu_448_p2 = (tmp_146_not_reg_817 | icmp3_fu_402_p2);

assign col_assign_1_t_fu_474_p2 = (tmp_64_reg_864 ^ 2'd3);

assign col_buf_0_val_0_0_fu_491_p3 = ((brmerge_reg_869[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_49_fu_479_p5);

assign col_buf_0_val_1_0_fu_510_p3 = ((brmerge_reg_869[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_50_fu_498_p5);

assign col_buf_0_val_2_0_fu_529_p3 = ((brmerge_reg_869[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_51_fu_517_p5);

assign exitcond460_i_i_fu_334_p2 = ((t_V_4_reg_245 == 11'd1026) ? 1'b1 : 1'b0);

assign exitcond461_i_i_fu_256_p2 = ((t_V_reg_234 == 10'd770) ? 1'b1 : 1'b0);

assign i_V_fu_262_p2 = (t_V_reg_234 + 10'd1);

assign icmp2_fu_356_p2 = ((tmp_54_fu_346_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_402_p2 = ((tmp_62_fu_392_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_fu_290_p2 = ((tmp_fu_280_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_340_p2 = (t_V_4_reg_245 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_41_fu_453_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_876;

assign k_buf_0_val_4_address0 = tmp_41_fu_453_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_882;

assign k_buf_0_val_5_address0 = tmp_41_fu_453_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_888;

assign not_s_fu_422_p2 = (tmp_63_fu_414_p3 ^ 1'd1);

assign or_cond_i_i_fu_460_p2 = (icmp_reg_822 & icmp2_fu_356_p2);

assign or_cond_i_i_i_fu_408_p2 = (rev_fu_386_p2 & icmp3_fu_402_p2);

assign p_assign_1_cast_cast_fu_428_p3 = ((not_s_fu_422_p2[0:0] === 1'b1) ? 10'd1023 : 10'd0);

assign p_dst_data_stream_V_din = ((tmp_222_2_2_fu_722_p2[0:0] === 1'b1) ? col_buf_0_val_0_0_reg_898_pp0_iter2_reg : temp_0_i_i_i_0210_i_6_fu_714_p3);

assign rev_fu_386_p2 = (tmp_56_fu_378_p3 ^ 1'd1);

assign row_assign_7_1_t_fu_318_p2 = (tmp_53_fu_314_p1 ^ 2'd1);

assign row_assign_7_2_t_fu_324_p2 = ($signed(2'd2) - $signed(tmp_53_fu_314_p1));

assign src_kernel_win_0_va_8_fu_562_p3 = ((tmp_40_reg_835[0:0] === 1'b1) ? tmp_52_fu_551_p5 : col_buf_0_val_1_0_fu_510_p3);

assign src_kernel_win_0_va_9_fu_580_p3 = ((tmp_40_reg_835[0:0] === 1'b1) ? tmp_57_fu_569_p5 : col_buf_0_val_2_0_fu_529_p3);

assign t_V_4_cast_fu_330_p1 = t_V_4_reg_245;

assign temp_0_i_i_i_0210_i_1_fu_613_p3 = ((tmp_222_0_2_fu_607_p2[0:0] === 1'b1) ? src_kernel_win_0_va_9_fu_580_p3 : temp_0_i_i_i_0210_i_fu_599_p3);

assign temp_0_i_i_i_0210_i_2_fu_645_p3 = ((tmp_222_1_fu_640_p2[0:0] === 1'b1) ? src_kernel_win_0_va_3_fu_132 : temp_0_i_i_i_0210_i_1_reg_912);

assign temp_0_i_i_i_0210_i_3_fu_658_p3 = ((tmp_222_1_1_fu_652_p2[0:0] === 1'b1) ? src_kernel_win_0_va_2_fu_128 : temp_0_i_i_i_0210_i_2_fu_645_p3);

assign temp_0_i_i_i_0210_i_4_fu_671_p3 = ((tmp_222_1_2_fu_666_p2[0:0] === 1'b1) ? src_kernel_win_0_va_8_reg_905 : temp_0_i_i_i_0210_i_3_fu_658_p3);

assign temp_0_i_i_i_0210_i_5_fu_701_p3 = ((tmp_222_2_fu_696_p2[0:0] === 1'b1) ? src_kernel_win_0_va_1_fu_124 : temp_0_i_i_i_0210_i_4_reg_918);

assign temp_0_i_i_i_0210_i_6_fu_714_p3 = ((tmp_222_2_1_fu_708_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_120 : temp_0_i_i_i_0210_i_5_fu_701_p3);

assign temp_0_i_i_i_0210_i_fu_599_p3 = ((tmp_222_0_1_fu_593_p2[0:0] === 1'b1) ? src_kernel_win_0_va_4_fu_136 : src_kernel_win_0_va_5_fu_140);

assign tmp_146_not_fu_274_p2 = (tmp_s_fu_268_p2 ^ 1'd1);

assign tmp_176_2_fu_302_p2 = ((t_V_reg_234 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_222_0_1_fu_593_p2 = ((src_kernel_win_0_va_4_fu_136 > src_kernel_win_0_va_5_fu_140) ? 1'b1 : 1'b0);

assign tmp_222_0_2_fu_607_p2 = ((src_kernel_win_0_va_9_fu_580_p3 > temp_0_i_i_i_0210_i_fu_599_p3) ? 1'b1 : 1'b0);

assign tmp_222_1_1_fu_652_p2 = ((src_kernel_win_0_va_2_fu_128 > temp_0_i_i_i_0210_i_2_fu_645_p3) ? 1'b1 : 1'b0);

assign tmp_222_1_2_fu_666_p2 = ((src_kernel_win_0_va_8_reg_905 > temp_0_i_i_i_0210_i_3_fu_658_p3) ? 1'b1 : 1'b0);

assign tmp_222_1_fu_640_p2 = ((src_kernel_win_0_va_3_fu_132 > temp_0_i_i_i_0210_i_1_reg_912) ? 1'b1 : 1'b0);

assign tmp_222_2_1_fu_708_p2 = ((src_kernel_win_0_va_fu_120 > temp_0_i_i_i_0210_i_5_fu_701_p3) ? 1'b1 : 1'b0);

assign tmp_222_2_2_fu_722_p2 = ((col_buf_0_val_0_0_reg_898_pp0_iter2_reg > temp_0_i_i_i_0210_i_6_fu_714_p3) ? 1'b1 : 1'b0);

assign tmp_222_2_fu_696_p2 = ((src_kernel_win_0_va_1_fu_124 > temp_0_i_i_i_0210_i_4_reg_918) ? 1'b1 : 1'b0);

assign tmp_39_fu_296_p2 = ((t_V_reg_234 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_308_p2 = ((t_V_reg_234 > 10'd768) ? 1'b1 : 1'b0);

assign tmp_41_fu_453_p1 = x_fu_436_p3;

assign tmp_53_fu_314_p1 = t_V_reg_234[1:0];

assign tmp_54_fu_346_p4 = {{t_V_4_reg_245[10:1]}};

assign tmp_55_fu_362_p1 = t_V_4_reg_245[9:0];

assign tmp_56_fu_378_p3 = ImagLoc_x_fu_366_p2[32'd11];

assign tmp_62_fu_392_p4 = {{ImagLoc_x_fu_366_p2[11:10]}};

assign tmp_63_fu_414_p3 = ImagLoc_x_fu_366_p2[32'd11];

assign tmp_64_fu_444_p1 = x_fu_436_p3[1:0];

assign tmp_fu_280_p4 = {{t_V_reg_234[9:1]}};

assign tmp_s_fu_268_p2 = ((t_V_reg_234 < 10'd768) ? 1'b1 : 1'b0);

assign x_fu_436_p3 = ((or_cond_i_i_i_fu_408_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_372_p2 : p_assign_1_cast_cast_fu_428_p3);

endmodule //Dilate
