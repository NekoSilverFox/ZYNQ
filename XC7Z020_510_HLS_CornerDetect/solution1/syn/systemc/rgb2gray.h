// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2gray_HH_
#define _rgb2gray_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "doCorner_mac_mulabkb.h"
#include "doCorner_mac_mulacud.h"

namespace ap_rtl {

struct rgb2gray : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > imgIn_data_stream_0_V_dout;
    sc_in< sc_logic > imgIn_data_stream_0_V_empty_n;
    sc_out< sc_logic > imgIn_data_stream_0_V_read;
    sc_in< sc_lv<8> > imgIn_data_stream_1_V_dout;
    sc_in< sc_logic > imgIn_data_stream_1_V_empty_n;
    sc_out< sc_logic > imgIn_data_stream_1_V_read;
    sc_in< sc_lv<8> > imgIn_data_stream_2_V_dout;
    sc_in< sc_logic > imgIn_data_stream_2_V_empty_n;
    sc_out< sc_logic > imgIn_data_stream_2_V_read;
    sc_out< sc_lv<8> > imgOut_3C_data_stream_0_V_din;
    sc_in< sc_logic > imgOut_3C_data_stream_0_V_full_n;
    sc_out< sc_logic > imgOut_3C_data_stream_0_V_write;
    sc_out< sc_lv<8> > imgOut_3C_data_stream_1_V_din;
    sc_in< sc_logic > imgOut_3C_data_stream_1_V_full_n;
    sc_out< sc_logic > imgOut_3C_data_stream_1_V_write;
    sc_out< sc_lv<8> > imgOut_3C_data_stream_2_V_din;
    sc_in< sc_logic > imgOut_3C_data_stream_2_V_full_n;
    sc_out< sc_logic > imgOut_3C_data_stream_2_V_write;
    sc_out< sc_lv<8> > imgOut_1C_data_stream_V_din;
    sc_in< sc_logic > imgOut_1C_data_stream_V_full_n;
    sc_out< sc_logic > imgOut_1C_data_stream_V_write;


    // Module declarations
    rgb2gray(sc_module_name name);
    SC_HAS_PROCESS(rgb2gray);

    ~rgb2gray();

    sc_trace_file* mVcdFile;

    doCorner_mac_mulabkb<1,1,8,8,16,16>* doCorner_mac_mulabkb_U11;
    doCorner_mac_mulacud<1,1,8,9,14,16>* doCorner_mac_mulacud_U12;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > imgIn_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_242_p2;
    sc_signal< sc_logic > imgIn_data_stream_1_V_blk_n;
    sc_signal< sc_logic > imgIn_data_stream_2_V_blk_n;
    sc_signal< sc_logic > imgOut_3C_data_stream_0_V_blk_n;
    sc_signal< sc_logic > imgOut_3C_data_stream_1_V_blk_n;
    sc_signal< sc_logic > imgOut_3C_data_stream_2_V_blk_n;
    sc_signal< sc_logic > imgOut_1C_data_stream_V_blk_n;
    sc_signal< sc_lv<10> > idxRow_1_fu_236_p2;
    sc_signal< sc_lv<10> > idxRow_1_reg_329;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > idxCol_1_fu_248_p2;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<10> > idxRow_reg_208;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<11> > idxCol_reg_219;
    sc_signal< sc_lv<1> > exitcond1_fu_230_p2;
    sc_signal< sc_lv<13> > p_shl_fu_262_p3;
    sc_signal< sc_lv<9> > p_shl1_fu_274_p3;
    sc_signal< sc_lv<14> > p_shl_cast_fu_270_p1;
    sc_signal< sc_lv<14> > p_shl1_cast_fu_282_p1;
    sc_signal< sc_lv<14> > tmp_6_fu_286_p2;
    sc_signal< sc_lv<16> > grp_fu_309_p3;
    sc_signal< sc_lv<8> > grp_fu_309_p0;
    sc_signal< sc_lv<8> > grp_fu_309_p1;
    sc_signal< sc_lv<16> > grp_fu_317_p3;
    sc_signal< sc_lv<8> > grp_fu_317_p0;
    sc_signal< sc_lv<9> > grp_fu_317_p1;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_309_p00;
    sc_signal< sc_lv<16> > grp_fu_317_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_4C;
    static const sc_lv<16> ap_const_lv16_96;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_230_p2();
    void thread_exitcond_fu_242_p2();
    void thread_grp_fu_309_p0();
    void thread_grp_fu_309_p00();
    void thread_grp_fu_309_p1();
    void thread_grp_fu_317_p0();
    void thread_grp_fu_317_p00();
    void thread_grp_fu_317_p1();
    void thread_idxCol_1_fu_248_p2();
    void thread_idxRow_1_fu_236_p2();
    void thread_imgIn_data_stream_0_V_blk_n();
    void thread_imgIn_data_stream_0_V_read();
    void thread_imgIn_data_stream_1_V_blk_n();
    void thread_imgIn_data_stream_1_V_read();
    void thread_imgIn_data_stream_2_V_blk_n();
    void thread_imgIn_data_stream_2_V_read();
    void thread_imgOut_1C_data_stream_V_blk_n();
    void thread_imgOut_1C_data_stream_V_din();
    void thread_imgOut_1C_data_stream_V_write();
    void thread_imgOut_3C_data_stream_0_V_blk_n();
    void thread_imgOut_3C_data_stream_0_V_din();
    void thread_imgOut_3C_data_stream_0_V_write();
    void thread_imgOut_3C_data_stream_1_V_blk_n();
    void thread_imgOut_3C_data_stream_1_V_din();
    void thread_imgOut_3C_data_stream_1_V_write();
    void thread_imgOut_3C_data_stream_2_V_blk_n();
    void thread_imgOut_3C_data_stream_2_V_din();
    void thread_imgOut_3C_data_stream_2_V_write();
    void thread_internal_ap_ready();
    void thread_p_shl1_cast_fu_282_p1();
    void thread_p_shl1_fu_274_p3();
    void thread_p_shl_cast_fu_270_p1();
    void thread_p_shl_fu_262_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_6_fu_286_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
