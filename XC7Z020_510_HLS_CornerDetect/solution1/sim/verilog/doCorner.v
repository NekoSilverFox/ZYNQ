// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doCorner,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-2,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=17.108000,HLS_SYN_LAT=802113,HLS_SYN_TPT=802110,HLS_SYN_MEM=61,HLS_SYN_DSP=2,HLS_SYN_FF=8441,HLS_SYN_LUT=9836,HLS_VERSION=2018_3}" *)

module doCorner (
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        inStream_TDATA,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        inStream_TVALID,
        inStream_TREADY,
        outStream_TVALID,
        outStream_TREADY
);

parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] inStream_TDATA;
input  [2:0] inStream_TKEEP;
input  [2:0] inStream_TSTRB;
input  [0:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [0:0] inStream_TID;
input  [0:0] inStream_TDEST;
output  [23:0] outStream_TDATA;
output  [2:0] outStream_TKEEP;
output  [2:0] outStream_TSTRB;
output  [0:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [0:0] outStream_TID;
output  [0:0] outStream_TDEST;
input   inStream_TVALID;
output   inStream_TREADY;
output   outStream_TVALID;
input   outStream_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_inStream_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    rgb2gray_U0_ap_start;
wire    rgb2gray_U0_start_full_n;
wire    rgb2gray_U0_ap_done;
wire    rgb2gray_U0_ap_continue;
wire    rgb2gray_U0_ap_idle;
wire    rgb2gray_U0_ap_ready;
wire    rgb2gray_U0_start_out;
wire    rgb2gray_U0_start_write;
wire    rgb2gray_U0_imgIn_data_stream_0_V_read;
wire    rgb2gray_U0_imgIn_data_stream_1_V_read;
wire    rgb2gray_U0_imgIn_data_stream_2_V_read;
wire   [7:0] rgb2gray_U0_imgOut_3C_data_stream_0_V_din;
wire    rgb2gray_U0_imgOut_3C_data_stream_0_V_write;
wire   [7:0] rgb2gray_U0_imgOut_3C_data_stream_1_V_din;
wire    rgb2gray_U0_imgOut_3C_data_stream_1_V_write;
wire   [7:0] rgb2gray_U0_imgOut_3C_data_stream_2_V_din;
wire    rgb2gray_U0_imgOut_3C_data_stream_2_V_write;
wire   [7:0] rgb2gray_U0_imgOut_1C_data_stream_V_din;
wire    rgb2gray_U0_imgOut_1C_data_stream_V_write;
wire    FAST_t_opr_U0_ap_start;
wire    FAST_t_opr_U0_ap_done;
wire    FAST_t_opr_U0_ap_continue;
wire    FAST_t_opr_U0_ap_idle;
wire    FAST_t_opr_U0_ap_ready;
wire    FAST_t_opr_U0_start_out;
wire    FAST_t_opr_U0_start_write;
wire    FAST_t_opr_U0_p_src_data_stream_V_read;
wire   [7:0] FAST_t_opr_U0_p_mask_data_stream_V_din;
wire    FAST_t_opr_U0_p_mask_data_stream_V_write;
wire    Dilate_U0_ap_start;
wire    Dilate_U0_ap_done;
wire    Dilate_U0_ap_continue;
wire    Dilate_U0_ap_idle;
wire    Dilate_U0_ap_ready;
wire    Dilate_U0_p_src_data_stream_V_read;
wire   [7:0] Dilate_U0_p_dst_data_stream_V_din;
wire    Dilate_U0_p_dst_data_stream_V_write;
wire    PaintMask_U0_ap_start;
wire    PaintMask_U0_ap_done;
wire    PaintMask_U0_ap_continue;
wire    PaintMask_U0_ap_idle;
wire    PaintMask_U0_ap_ready;
wire    PaintMask_U0_start_out;
wire    PaintMask_U0_start_write;
wire    PaintMask_U0_p_src_data_stream_0_V_read;
wire    PaintMask_U0_p_src_data_stream_1_V_read;
wire    PaintMask_U0_p_src_data_stream_2_V_read;
wire    PaintMask_U0_p_mask_data_stream_V_read;
wire   [7:0] PaintMask_U0_p_dst_data_stream_0_V_din;
wire    PaintMask_U0_p_dst_data_stream_0_V_write;
wire   [7:0] PaintMask_U0_p_dst_data_stream_1_V_din;
wire    PaintMask_U0_p_dst_data_stream_1_V_write;
wire   [7:0] PaintMask_U0_p_dst_data_stream_2_V_din;
wire    PaintMask_U0_p_dst_data_stream_2_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [23:0] Mat2AXIvideo_U0_outStream_TDATA;
wire    Mat2AXIvideo_U0_outStream_TVALID;
wire   [2:0] Mat2AXIvideo_U0_outStream_TKEEP;
wire   [2:0] Mat2AXIvideo_U0_outStream_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_outStream_TUSER;
wire   [0:0] Mat2AXIvideo_U0_outStream_TLAST;
wire   [0:0] Mat2AXIvideo_U0_outStream_TID;
wire   [0:0] Mat2AXIvideo_U0_outStream_TDEST;
wire    ap_sync_continue;
wire    img_0_data_stream_0_full_n;
wire   [7:0] img_0_data_stream_0_dout;
wire    img_0_data_stream_0_empty_n;
wire    img_0_data_stream_1_full_n;
wire   [7:0] img_0_data_stream_1_dout;
wire    img_0_data_stream_1_empty_n;
wire    img_0_data_stream_2_full_n;
wire   [7:0] img_0_data_stream_2_dout;
wire    img_0_data_stream_2_empty_n;
wire    img_1_data_stream_0_full_n;
wire   [7:0] img_1_data_stream_0_dout;
wire    img_1_data_stream_0_empty_n;
wire    img_1_data_stream_1_full_n;
wire   [7:0] img_1_data_stream_1_dout;
wire    img_1_data_stream_1_empty_n;
wire    img_1_data_stream_2_full_n;
wire   [7:0] img_1_data_stream_2_dout;
wire    img_1_data_stream_2_empty_n;
wire    img_2_data_stream_0_full_n;
wire   [7:0] img_2_data_stream_0_dout;
wire    img_2_data_stream_0_empty_n;
wire    mask_data_stream_0_s_full_n;
wire   [7:0] mask_data_stream_0_s_dout;
wire    mask_data_stream_0_s_empty_n;
wire    dmask_data_stream_0_full_n;
wire   [7:0] dmask_data_stream_0_dout;
wire    dmask_data_stream_0_empty_n;
wire    img_3_data_stream_0_full_n;
wire   [7:0] img_3_data_stream_0_dout;
wire    img_3_data_stream_0_empty_n;
wire    img_3_data_stream_1_full_n;
wire   [7:0] img_3_data_stream_1_dout;
wire    img_3_data_stream_1_empty_n;
wire    img_3_data_stream_2_full_n;
wire   [7:0] img_3_data_stream_2_dout;
wire    img_3_data_stream_2_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_rgb2gray_U0_din;
wire    start_for_rgb2gray_U0_full_n;
wire   [0:0] start_for_rgb2gray_U0_dout;
wire    start_for_rgb2gray_U0_empty_n;
wire   [0:0] start_for_FAST_t_opr_U0_din;
wire    start_for_FAST_t_opr_U0_full_n;
wire   [0:0] start_for_FAST_t_opr_U0_dout;
wire    start_for_FAST_t_opr_U0_empty_n;
wire   [0:0] start_for_PaintMask_U0_din;
wire    start_for_PaintMask_U0_full_n;
wire   [0:0] start_for_PaintMask_U0_dout;
wire    start_for_PaintMask_U0_empty_n;
wire   [0:0] start_for_Dilate_U0_din;
wire    start_for_Dilate_U0_full_n;
wire   [0:0] start_for_Dilate_U0_dout;
wire    start_for_Dilate_U0_empty_n;
wire    Dilate_U0_start_full_n;
wire    Dilate_U0_start_write;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

doCorner_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
doCorner_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_rgb2gray_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .inStream_TDATA(inStream_TDATA),
    .inStream_TVALID(inStream_TVALID),
    .inStream_TREADY(AXIvideo2Mat_U0_inStream_TREADY),
    .inStream_TKEEP(inStream_TKEEP),
    .inStream_TSTRB(inStream_TSTRB),
    .inStream_TUSER(inStream_TUSER),
    .inStream_TLAST(inStream_TLAST),
    .inStream_TID(inStream_TID),
    .inStream_TDEST(inStream_TDEST),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_0_data_stream_0_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_0_data_stream_1_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_0_data_stream_2_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write)
);

rgb2gray rgb2gray_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rgb2gray_U0_ap_start),
    .start_full_n(rgb2gray_U0_start_full_n),
    .ap_done(rgb2gray_U0_ap_done),
    .ap_continue(rgb2gray_U0_ap_continue),
    .ap_idle(rgb2gray_U0_ap_idle),
    .ap_ready(rgb2gray_U0_ap_ready),
    .start_out(rgb2gray_U0_start_out),
    .start_write(rgb2gray_U0_start_write),
    .imgIn_data_stream_0_V_dout(img_0_data_stream_0_dout),
    .imgIn_data_stream_0_V_empty_n(img_0_data_stream_0_empty_n),
    .imgIn_data_stream_0_V_read(rgb2gray_U0_imgIn_data_stream_0_V_read),
    .imgIn_data_stream_1_V_dout(img_0_data_stream_1_dout),
    .imgIn_data_stream_1_V_empty_n(img_0_data_stream_1_empty_n),
    .imgIn_data_stream_1_V_read(rgb2gray_U0_imgIn_data_stream_1_V_read),
    .imgIn_data_stream_2_V_dout(img_0_data_stream_2_dout),
    .imgIn_data_stream_2_V_empty_n(img_0_data_stream_2_empty_n),
    .imgIn_data_stream_2_V_read(rgb2gray_U0_imgIn_data_stream_2_V_read),
    .imgOut_3C_data_stream_0_V_din(rgb2gray_U0_imgOut_3C_data_stream_0_V_din),
    .imgOut_3C_data_stream_0_V_full_n(img_1_data_stream_0_full_n),
    .imgOut_3C_data_stream_0_V_write(rgb2gray_U0_imgOut_3C_data_stream_0_V_write),
    .imgOut_3C_data_stream_1_V_din(rgb2gray_U0_imgOut_3C_data_stream_1_V_din),
    .imgOut_3C_data_stream_1_V_full_n(img_1_data_stream_1_full_n),
    .imgOut_3C_data_stream_1_V_write(rgb2gray_U0_imgOut_3C_data_stream_1_V_write),
    .imgOut_3C_data_stream_2_V_din(rgb2gray_U0_imgOut_3C_data_stream_2_V_din),
    .imgOut_3C_data_stream_2_V_full_n(img_1_data_stream_2_full_n),
    .imgOut_3C_data_stream_2_V_write(rgb2gray_U0_imgOut_3C_data_stream_2_V_write),
    .imgOut_1C_data_stream_V_din(rgb2gray_U0_imgOut_1C_data_stream_V_din),
    .imgOut_1C_data_stream_V_full_n(img_2_data_stream_0_full_n),
    .imgOut_1C_data_stream_V_write(rgb2gray_U0_imgOut_1C_data_stream_V_write)
);

FAST_t_opr FAST_t_opr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FAST_t_opr_U0_ap_start),
    .start_full_n(start_for_Dilate_U0_full_n),
    .ap_done(FAST_t_opr_U0_ap_done),
    .ap_continue(FAST_t_opr_U0_ap_continue),
    .ap_idle(FAST_t_opr_U0_ap_idle),
    .ap_ready(FAST_t_opr_U0_ap_ready),
    .start_out(FAST_t_opr_U0_start_out),
    .start_write(FAST_t_opr_U0_start_write),
    .p_src_data_stream_V_dout(img_2_data_stream_0_dout),
    .p_src_data_stream_V_empty_n(img_2_data_stream_0_empty_n),
    .p_src_data_stream_V_read(FAST_t_opr_U0_p_src_data_stream_V_read),
    .p_mask_data_stream_V_din(FAST_t_opr_U0_p_mask_data_stream_V_din),
    .p_mask_data_stream_V_full_n(mask_data_stream_0_s_full_n),
    .p_mask_data_stream_V_write(FAST_t_opr_U0_p_mask_data_stream_V_write)
);

Dilate Dilate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Dilate_U0_ap_start),
    .ap_done(Dilate_U0_ap_done),
    .ap_continue(Dilate_U0_ap_continue),
    .ap_idle(Dilate_U0_ap_idle),
    .ap_ready(Dilate_U0_ap_ready),
    .p_src_data_stream_V_dout(mask_data_stream_0_s_dout),
    .p_src_data_stream_V_empty_n(mask_data_stream_0_s_empty_n),
    .p_src_data_stream_V_read(Dilate_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Dilate_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(dmask_data_stream_0_full_n),
    .p_dst_data_stream_V_write(Dilate_U0_p_dst_data_stream_V_write)
);

PaintMask PaintMask_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(PaintMask_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(PaintMask_U0_ap_done),
    .ap_continue(PaintMask_U0_ap_continue),
    .ap_idle(PaintMask_U0_ap_idle),
    .ap_ready(PaintMask_U0_ap_ready),
    .start_out(PaintMask_U0_start_out),
    .start_write(PaintMask_U0_start_write),
    .p_src_data_stream_0_V_dout(img_1_data_stream_0_dout),
    .p_src_data_stream_0_V_empty_n(img_1_data_stream_0_empty_n),
    .p_src_data_stream_0_V_read(PaintMask_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(img_1_data_stream_1_dout),
    .p_src_data_stream_1_V_empty_n(img_1_data_stream_1_empty_n),
    .p_src_data_stream_1_V_read(PaintMask_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(img_1_data_stream_2_dout),
    .p_src_data_stream_2_V_empty_n(img_1_data_stream_2_empty_n),
    .p_src_data_stream_2_V_read(PaintMask_U0_p_src_data_stream_2_V_read),
    .p_mask_data_stream_V_dout(dmask_data_stream_0_dout),
    .p_mask_data_stream_V_empty_n(dmask_data_stream_0_empty_n),
    .p_mask_data_stream_V_read(PaintMask_U0_p_mask_data_stream_V_read),
    .p_dst_data_stream_0_V_din(PaintMask_U0_p_dst_data_stream_0_V_din),
    .p_dst_data_stream_0_V_full_n(img_3_data_stream_0_full_n),
    .p_dst_data_stream_0_V_write(PaintMask_U0_p_dst_data_stream_0_V_write),
    .p_dst_data_stream_1_V_din(PaintMask_U0_p_dst_data_stream_1_V_din),
    .p_dst_data_stream_1_V_full_n(img_3_data_stream_1_full_n),
    .p_dst_data_stream_1_V_write(PaintMask_U0_p_dst_data_stream_1_V_write),
    .p_dst_data_stream_2_V_din(PaintMask_U0_p_dst_data_stream_2_V_din),
    .p_dst_data_stream_2_V_full_n(img_3_data_stream_2_full_n),
    .p_dst_data_stream_2_V_write(PaintMask_U0_p_dst_data_stream_2_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_data_stream_0_V_dout(img_3_data_stream_0_dout),
    .img_data_stream_0_V_empty_n(img_3_data_stream_0_empty_n),
    .img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_3_data_stream_1_dout),
    .img_data_stream_1_V_empty_n(img_3_data_stream_1_empty_n),
    .img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_3_data_stream_2_dout),
    .img_data_stream_2_V_empty_n(img_3_data_stream_2_empty_n),
    .img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .outStream_TDATA(Mat2AXIvideo_U0_outStream_TDATA),
    .outStream_TVALID(Mat2AXIvideo_U0_outStream_TVALID),
    .outStream_TREADY(outStream_TREADY),
    .outStream_TKEEP(Mat2AXIvideo_U0_outStream_TKEEP),
    .outStream_TSTRB(Mat2AXIvideo_U0_outStream_TSTRB),
    .outStream_TUSER(Mat2AXIvideo_U0_outStream_TUSER),
    .outStream_TLAST(Mat2AXIvideo_U0_outStream_TLAST),
    .outStream_TID(Mat2AXIvideo_U0_outStream_TID),
    .outStream_TDEST(Mat2AXIvideo_U0_outStream_TDEST)
);

fifo_w8_d2_A img_0_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(img_0_data_stream_0_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(img_0_data_stream_0_dout),
    .if_empty_n(img_0_data_stream_0_empty_n),
    .if_read(rgb2gray_U0_imgIn_data_stream_0_V_read)
);

fifo_w8_d2_A img_0_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(img_0_data_stream_1_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(img_0_data_stream_1_dout),
    .if_empty_n(img_0_data_stream_1_empty_n),
    .if_read(rgb2gray_U0_imgIn_data_stream_1_V_read)
);

fifo_w8_d2_A img_0_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(img_0_data_stream_2_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(img_0_data_stream_2_dout),
    .if_empty_n(img_0_data_stream_2_empty_n),
    .if_read(rgb2gray_U0_imgIn_data_stream_2_V_read)
);

fifo_w8_d20000_A img_1_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2gray_U0_imgOut_3C_data_stream_0_V_din),
    .if_full_n(img_1_data_stream_0_full_n),
    .if_write(rgb2gray_U0_imgOut_3C_data_stream_0_V_write),
    .if_dout(img_1_data_stream_0_dout),
    .if_empty_n(img_1_data_stream_0_empty_n),
    .if_read(PaintMask_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d20000_A img_1_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2gray_U0_imgOut_3C_data_stream_1_V_din),
    .if_full_n(img_1_data_stream_1_full_n),
    .if_write(rgb2gray_U0_imgOut_3C_data_stream_1_V_write),
    .if_dout(img_1_data_stream_1_dout),
    .if_empty_n(img_1_data_stream_1_empty_n),
    .if_read(PaintMask_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d20000_A img_1_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2gray_U0_imgOut_3C_data_stream_2_V_din),
    .if_full_n(img_1_data_stream_2_full_n),
    .if_write(rgb2gray_U0_imgOut_3C_data_stream_2_V_write),
    .if_dout(img_1_data_stream_2_dout),
    .if_empty_n(img_1_data_stream_2_empty_n),
    .if_read(PaintMask_U0_p_src_data_stream_2_V_read)
);

fifo_w8_d2_A img_2_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2gray_U0_imgOut_1C_data_stream_V_din),
    .if_full_n(img_2_data_stream_0_full_n),
    .if_write(rgb2gray_U0_imgOut_1C_data_stream_V_write),
    .if_dout(img_2_data_stream_0_dout),
    .if_empty_n(img_2_data_stream_0_empty_n),
    .if_read(FAST_t_opr_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A mask_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FAST_t_opr_U0_p_mask_data_stream_V_din),
    .if_full_n(mask_data_stream_0_s_full_n),
    .if_write(FAST_t_opr_U0_p_mask_data_stream_V_write),
    .if_dout(mask_data_stream_0_s_dout),
    .if_empty_n(mask_data_stream_0_s_empty_n),
    .if_read(Dilate_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A dmask_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Dilate_U0_p_dst_data_stream_V_din),
    .if_full_n(dmask_data_stream_0_full_n),
    .if_write(Dilate_U0_p_dst_data_stream_V_write),
    .if_dout(dmask_data_stream_0_dout),
    .if_empty_n(dmask_data_stream_0_empty_n),
    .if_read(PaintMask_U0_p_mask_data_stream_V_read)
);

fifo_w8_d2_A img_3_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_0_V_din),
    .if_full_n(img_3_data_stream_0_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_0_V_write),
    .if_dout(img_3_data_stream_0_dout),
    .if_empty_n(img_3_data_stream_0_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A img_3_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_1_V_din),
    .if_full_n(img_3_data_stream_1_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_1_V_write),
    .if_dout(img_3_data_stream_1_dout),
    .if_empty_n(img_3_data_stream_1_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A img_3_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_2_V_din),
    .if_full_n(img_3_data_stream_2_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_2_V_write),
    .if_dout(img_3_data_stream_2_dout),
    .if_empty_n(img_3_data_stream_2_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

start_for_rgb2grapcA start_for_rgb2grapcA_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_rgb2gray_U0_din),
    .if_full_n(start_for_rgb2gray_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_rgb2gray_U0_dout),
    .if_empty_n(start_for_rgb2gray_U0_empty_n),
    .if_read(rgb2gray_U0_ap_ready)
);

start_for_FAST_t_qcK start_for_FAST_t_qcK_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FAST_t_opr_U0_din),
    .if_full_n(start_for_FAST_t_opr_U0_full_n),
    .if_write(rgb2gray_U0_start_write),
    .if_dout(start_for_FAST_t_opr_U0_dout),
    .if_empty_n(start_for_FAST_t_opr_U0_empty_n),
    .if_read(FAST_t_opr_U0_ap_ready)
);

start_for_PaintMarcU start_for_PaintMarcU_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_PaintMask_U0_din),
    .if_full_n(start_for_PaintMask_U0_full_n),
    .if_write(rgb2gray_U0_start_write),
    .if_dout(start_for_PaintMask_U0_dout),
    .if_empty_n(start_for_PaintMask_U0_empty_n),
    .if_read(PaintMask_U0_ap_ready)
);

start_for_Dilate_U0 start_for_Dilate_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Dilate_U0_din),
    .if_full_n(start_for_Dilate_U0_full_n),
    .if_write(FAST_t_opr_U0_start_write),
    .if_dout(start_for_Dilate_U0_dout),
    .if_empty_n(start_for_Dilate_U0_empty_n),
    .if_read(Dilate_U0_ap_ready)
);

start_for_Mat2AXIsc4 start_for_Mat2AXIsc4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(PaintMask_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ap_start;

assign Dilate_U0_ap_continue = 1'b1;

assign Dilate_U0_ap_start = start_for_Dilate_U0_empty_n;

assign Dilate_U0_start_full_n = 1'b1;

assign Dilate_U0_start_write = 1'b0;

assign FAST_t_opr_U0_ap_continue = 1'b1;

assign FAST_t_opr_U0_ap_start = start_for_FAST_t_opr_U0_empty_n;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign PaintMask_U0_ap_continue = 1'b1;

assign PaintMask_U0_ap_start = start_for_PaintMask_U0_empty_n;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (rgb2gray_U0_ap_idle & PaintMask_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & FAST_t_opr_U0_ap_idle & Dilate_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = AXIvideo2Mat_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = AXIvideo2Mat_U0_ap_ready;

assign inStream_TREADY = AXIvideo2Mat_U0_inStream_TREADY;

assign outStream_TDATA = Mat2AXIvideo_U0_outStream_TDATA;

assign outStream_TDEST = Mat2AXIvideo_U0_outStream_TDEST;

assign outStream_TID = Mat2AXIvideo_U0_outStream_TID;

assign outStream_TKEEP = Mat2AXIvideo_U0_outStream_TKEEP;

assign outStream_TLAST = Mat2AXIvideo_U0_outStream_TLAST;

assign outStream_TSTRB = Mat2AXIvideo_U0_outStream_TSTRB;

assign outStream_TUSER = Mat2AXIvideo_U0_outStream_TUSER;

assign outStream_TVALID = Mat2AXIvideo_U0_outStream_TVALID;

assign rgb2gray_U0_ap_continue = 1'b1;

assign rgb2gray_U0_ap_start = start_for_rgb2gray_U0_empty_n;

assign rgb2gray_U0_start_full_n = (start_for_PaintMask_U0_full_n & start_for_FAST_t_opr_U0_full_n);

assign start_for_Dilate_U0_din = 1'b1;

assign start_for_FAST_t_opr_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

assign start_for_PaintMask_U0_din = 1'b1;

assign start_for_rgb2gray_U0_din = 1'b1;

endmodule //doCorner
