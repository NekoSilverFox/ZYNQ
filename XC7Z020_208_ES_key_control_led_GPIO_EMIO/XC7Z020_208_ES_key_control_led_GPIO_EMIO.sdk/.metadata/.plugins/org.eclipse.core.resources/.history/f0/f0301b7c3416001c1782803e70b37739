/*
  * main.c
 *
 *  Created on: 2021年9月14日
 *      Author: NekoSilverfox
 */


// ---------------------------------------------
#include <stdio.h>
#include "xparameters.h" //器件参数信息
#include "xgpiops.h"     //包含PS GPIO的函数
#include "sleep.h"       //包含sleep()函数
// ---------------------------------------------



// ---------------------------------------------
#define GPIO_DEVICE_ID  	XPAR_XGPIOPS_0_DEVICE_ID

//连接到MIO的LED
#define MIO_LED1 			50							/* 核心板PS端LED */
#define MIO_LED2 			51

//连接到MIO的KEY
#define MIO_KEY1			0							/* 核心板PS端KEY */

//连接到EIO的KEY
#define EMIO_KEY1			54							/* 核心板PL端KEY */
// ---------------------------------------------


// ---------------------------------------------
int main() {
	printf("GPIO EMIO TEST!\n\r");

	XGpioPs_Config* ConfigPtr = NULL;	/*PS端 GPIO 驱动实例*/
	XGpioPs Gpio;	/* 指向GPIO的指针 The driver instance for GPIO Device. */

	// 查找器件的ID，查找器件的配置信息
	ConfigPtr = XGpioPs_LookupConfig(GPIO_DEVICE_ID);

	// 初始化GPIO驱动
	int Status = XGpioPs_CfgInitialize(&Gpio, ConfigPtr, ConfigPtr->BaseAddr);
    if (Status != XST_SUCCESS){
        return XST_FAILURE;
    }

	// GPIO方向设置为输出（0 - 输入；1 - 输出）
	XGpioPs_SetDirectionPin(&Gpio, MIO_LED1, 1);

	// GPIO方向设置为输入（0 - 输入；1 - 输出）
	XGpioPs_SetDirectionPin(&Gpio, MIO_KEY1, 0);
	XGpioPs_SetDirectionPin(&Gpio, EMIO_KEY1, 0);

	// 设置输出使能（0 - 关闭输出使能；1 - 打开输出使能）
	XGpioPs_SetOutputEnablePin(&Gpio, MIO_LED1, 1);

	printf("Before while loop!!\n\r");

	// 实现LED按键点亮
	u32 key_value;
	while(1) {
		printf("Ready to read key value!!\n\r");

		// 读取按键状态
//		key_value = XGpioPs_ReadPin(&Gpio, MIO_KEY1);
		key_value = XGpioPs_ReadPin(&Gpio, EMIO_KEY1);
		printf("Read key value done, value == %d!!\n\r", key_value);

		// 将按键状态写入LED（写数据到GPIO的输出引脚）
		XGpioPs_WritePin(&Gpio, MIO_LED1, key_value);
		printf("Read key value done!!\n\r");
	}

	return 0;
}
